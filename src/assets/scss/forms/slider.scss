@function sqrt($number) {
  $number: strip-unit($number);
  $x0: 1;
  $x1: $x0;
  @for $i from 1 through 10 {
      $x1: $x0 - ($x0 * $x0 - abs($number)) / (2 * $x0);
      $x0: $x1;
  }

  @return $x1;
}

@function pow($number, $exponent) {
  $value: 1;
  $number: strip-unit($number);
  @if $exponent > 0 {
      @for $i from 1 through $exponent {
      $value: $value * $number;
      }
  }

  @return $value;
}

@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
      @return $number / ($number * 0 + 1);
  }

  @return $number;
}

@function px-unit($number) {
  @return $number * 1px;
}

$arrow-side: px-unit(sqrt(map-get($sizes, 2m)));
$cutoff-margin: px-unit(sqrt(map-get($sizes, 4xs)));

.c-slider__input {
  position: absolute;
  visibility: hidden;
}

.c-slider__label {
  font-size: map-get($font-sizes, xs);
  font-weight: map-get($font-weight, light);
  letter-spacing: map-get($letter-spacings, xs);
  line-height: map-get($line-heights, xs);
  color: map-get($color-grey-tones, grey-tone-1);
}

.c-slider__wrapper {
  width: 100%;
  margin: map-get($sizes, s) map-get($sizes, 5xs); 
  padding: (map-get($sizes, 4m) + map-get($sizes, 4xs)) map-get($sizes, 5xs) (map-get($sizes, 2xs) + map-get($sizes, 4xs));
}

.c-slider__background {
  position: relative;
  background-color: map-get($color-grey-tones, grey-tone-6);
  display: block;
  height: map-get($sizes, 3xs);
  border-radius: 0 map-get($border-radius, xs) map-get($border-radius, xs) 0;
}

.c-slider__filler {
  height: map-get($sizes, 3xs);
  border-radius: map-get($border-radius, xs) 0 0 map-get($border-radius, xs);
  background-color: map-get($color-primary-action, primary-action-bright);
  float: left;
}

.c-slider__handle {
  cursor: pointer;
  position: absolute;
  box-sizing: border-box;
  width: map-get($sizes, m);
  height: map-get($sizes, m);
  background-color: map-get($color-basic, primary-white);
  border-radius: 50%;
  box-shadow: map-get($shadows, s);
  border: map-get($borders, xs) solid map-get($color-grey-tones, grey-tone-8);
  top: - map-get($sizes, xs) + map-get($sizes, 4xs);
  margin-left: - map-get($sizes, xs);

  &:focus {
    outline: none;
    [data-whatinput="keyboard"] & {
      box-shadow: map-get($shadows, s), inset 0 0 0 map-get($sizes, 3xs) map-get($color-primary-action, primary-action-light);
      border-color: map-get($color-primary-action, primary-action-light);
    }
  }
}

// tooltip of slider
.c-slider__tooltip {
  cursor: default;
  bottom: calc(100% + #{map-get($sizes, xs)});
  transform: translateX(-50%);
  left: 50%;
  padding-bottom: map-get($sizes, 3xs);
  position: absolute;
}

// arrow cutout
.c-slider__tooltip-content::after {
  content: "";
  left: 50%;
  top: calc(100% - #{map-get($sizes, 2xs) + $cutoff-margin - map-get($borders, xs)});
  transform: translateX(-50%) rotate(-45deg);
  background: map-get($color-basic, primary-white);
  width: $arrow-side;
  height: $arrow-side;
  position: absolute;
  border: transparent;
  z-index: 4;
}

// arrow shadow
.c-slider__tooltip-content::before {
  content: "";
  left: 50%;
  top: calc(100% - #{map-get($sizes, 2xs) - map-get($borders, xs)});
  transform: translateX(-50%) rotate(-45deg);
  background: map-get($color-basic, primary-white);
  width: $arrow-side;
  height: $arrow-side;
  position: absolute;
  border: map-get($borders, xs) transparent;
  border-bottom-color: map-get($color-grey-tones, grey-tone-8);
  border-left-color: map-get($color-grey-tones, grey-tone-8);
  border-style: solid;
  box-shadow: map-get($shadows, s);
  z-index: 3;
}

.c-slider__tooltip-inner {
  display: flex;
  justify-content: center;
  align-items: center;
  height: map-get($sizes, m);
  width: map-get($sizes, 4m);
  background: map-get($color-basic, primary-white);
  border: map-get($borders, xs) solid map-get($color-grey-tones, grey-tone-8);
  border-radius: map-get($border-radius, s);
  box-shadow: map-get($shadows, s);
  z-index: 2;
}

.c-slider__tooltip-value {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  color: map-get($color-primary-action, primary-action-dark);
  font-size: map-get($font-sizes, 5xs);
  font-weight: map-get($font-weight, semibold);
  letter-spacing: map-get($letter-spacings, m);
  line-height: map-get($line-heights, 4xs);
  background: map-get($color-basic, primary-white);
  height: map-get($sizes, m);
  border-top: map-get($borders, xs) solid map-get($color-grey-tones, grey-tone-8);
  border-bottom: map-get($borders, xs) solid map-get($color-grey-tones, grey-tone-8);
  z-index: 3;
}

@media screen and (-ms-high-contrast: active) {
  .c-slider__background {
    background-color: map-get($color-high-contrast, "white");
  }
  .c-slider__filler {
    background-color: map-get($color-high-contrast, "yellow");
  }

  .c-slider__handle:focus {
    [data-whatinput="keyboard"] & {
      box-shadow: map-get($shadows, s), inset 0 0 0 map-get($sizes, 3xs) map-get($color-high-contrast, "white");
      border-color:  map-get($color-high-contrast, "white");
    }
  }
}

.c-slider__value-label-container {
  display: flex;
  justify-content: space-between;
}

.c-slider__value-label {
  font-size: map-get($font-sizes, 4xs);
  font-weight: map-get($font-weight, regular);
  height: map-get($sizes, s);
  letter-spacing: map-get($letter-spacings, xs);
  line-height: map-get($line-heights, 4xs);
}

.c-slider--negative {
  .c-slider__label {
    color: map-get($color-basic, primary-white);
  }
  .c-slider__background {
    background-color: rgba(map-get($color-basic, primary-white), 0.35);
  }
  .c-slider__filler {
    background-color: map-get($color-basic, primary-white);
  }
  .c-slider__value-label {
    color: map-get($color-basic, primary-white);
  }
}
