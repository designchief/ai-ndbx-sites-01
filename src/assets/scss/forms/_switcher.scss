.c-switcher {
  &:focus {
    [data-whatinput="keyboard"] & {
      box-shadow: 0px 8px 20px 0px rgba(map-get($color-basic, primary-black), 0.5);
    }
  }
}

.c-switcher__input {
  opacity: 0;
  position: absolute;
  z-index: -1;
}

.c-switcher__label {
  font-size: map-get($font-sizes, xs);
  letter-spacing: map-get($letter-spacings, xs);
  line-height: map-get($line-heights, xs);
  @media screen and (-ms-high-contrast: active) {
    color: #FFFF00;
  }
  cursor: pointer;
}

.c-switcher__input + .c-switcher__label {
  display: flex;
  align-items: center;
  position: relative;
  padding-left: map-get($sizes, 4m) + map-get($sizes, xs);

  &::before {
    content: "";
    display: block;
    background-color: map-get($color-grey-tones, grey-tone-3);
    border-radius: map-get($sizes, s);
    height: map-get($sizes, m);
    width: map-get($sizes, 4m);
    position: absolute;
    left: map-get($sizes, 5xs);
    transition: background-color .2s ease;
    top: map-get($sizes, 4xs);

    @media screen and (-ms-high-contrast: active) {
      background-color: map-get($color-grey-tones, grey-tone-5);
      color: #FFFF00;
    }
  }

  &::after {
    background-color: map-get($color-basic, primary-white);
    border-radius: 50%;
    content: "";
    display: block;
    position: absolute;
    transition: transform .1s ease;
    height: map-get($sizes, m);
    width: map-get($sizes, m);
    box-sizing: border-box;
    background-clip: content-box;
    border: map-get($borders, m) solid transparent;
    left: map-get($sizes, 5xs);
    top: map-get($sizes, 4xs);
  }
}

.c-switcher__input:checked + .c-switcher__label {
  &::before {
    background-color: map-get($color-primary-action, primary-action-bright);
    @media screen and (-ms-high-contrast: active) {
      background-color: #FFFF00;
      color: #FFFF00;
    }
  }

  &::after {
    transform: translate(map-get($sizes, m), 0%);
  }
}

.c-switcher__input:focus + .c-switcher__label {
  @media screen and (-ms-high-contrast: active) {
    color: map-get($color-high-contrast, "white");
  }
}

.c-switcher__icon {
  position: absolute;
  z-index: 1;
  height: map-get($sizes, 2m);
  width: map-get($sizes, 2m);
  box-sizing: border-box;
  background-clip: content-box;
  display: flex;
  align-items: center;
  justify-content: center;
  top: -1 * map-get($sizes, 4xs);

  &::before {
    color: map-get($color-grey-tones, grey-tone-5);
    display: inline-block;
    font-size: map-get($font-sizes, s);
    line-height: map-get($line-heights, 2xs);
    text-align: center;
  }
}

.c-switcher__icon--active {
  opacity: 0;
  left: map-get($sizes, m);

  &::before {
    color: map-get($color-primary-action, primary-action-dark);
  }
}

.c-switcher__input:checked + .c-switcher__label .c-switcher__icon--active {
  opacity: 1;
  transition: opacity .2s ease .1s;
}

.c-switcher__input:disabled {
  cursor: not-allowed;
}

.c-switcher__input:disabled + .c-switcher__label {
  cursor: not-allowed;
  color: map-get($color-grey-tones, grey-tone-5);
  
  &::after {
    background-color: rgba(map-get($color-basic, primary-white), 0.4);
  }
  
  &::before {
    background-color: map-get($color-grey-tones, grey-tone-5);
  }
}

.c-switcher__input:disabled + .c-switcher__label .c-switcher__icon::after {
  background-color: rgba(map-get($color-basic, primary-white), 0.4);
}

.c-switcher__input:disabled + .c-switcher__label .c-switcher__icon::before {
  color: map-get($color-grey-tones, grey-tone-5);
}

[data-whatinput="keyboard"] {
  .c-switcher__input:focus:not([disabled]) + .c-switcher__label,
  .c-switcher__input:active:not([disabled]) + .c-switcher__label {
    &::before {
      background-color: map-get($color-functional, accessibility);
      box-shadow: 0px 2px 5px $c-grey-shadow;
    }
    .c-switcher__icon {
      &::before {
        color: map-get($color-functional, accessibility);
      }
    }
  }
}

.c-switcher--big .c-switcher__input + .c-switcher__label {
  padding-left: map-get($sizes, l) + map-get($sizes, xs);

  &::before {
    top: -1 * map-get($sizes, 4xs);
    height: map-get($sizes, 2m);
    width: map-get($sizes, l);
    border-radius: map-get($sizes, s);
  }

  &::after {
    top: -1 * map-get($sizes, 4xs);
    height: map-get($sizes, 2m);
    width: map-get($sizes, 2m);
    border: map-get($borders, m) solid transparent;
  }
}

.c-switcher--big .c-switcher__input:checked + .c-switcher__label {
  &::after {
    transform: translate(map-get($sizes, m), 0);
  }
}

.c-switcher--negative {
  .c-switcher__label {
    color: map-get($color-basic, primary-white);
  }

  .c-switcher__input + .c-switcher__label {
    &::before {
      background-color: rgba(map-get($color-basic, primary-white), 0.4);
    }
  }

  .c-switcher__input:disabled + .c-switcher__label {
    color: rgba(map-get($color-basic, primary-white), 0.4);
  }
    
  .c-switcher__input:disabled + .c-switcher__label::after {
    background-color: rgba(map-get($color-basic, primary-white), 0.4);
  }

  &.c-switcher--big {
    .c-switcher__input + .c-switcher__label .c-switcher__icon::before {
          color: map-get($color-primary-action, primary-action-dark);
    }

    .c-switcher__input:disabled + .c-switcher__label .c-switcher__icon::before {
      color: map-get($color-grey-tones, grey-tone-4);
    }
  }
}

.c-switcher--right {
  .c-switcher__label {
    width: 100%;
  }

  .c-switcher__input + .c-switcher__label {
    padding-left: map-get($sizes, 5xs);
    padding-right: map-get($sizes, 4m) + map-get($sizes, xs);

    &::before {
      left: auto;
      right: map-get($sizes, 5xs);
    }

    &::after {
      left: auto;
      right: map-get($sizes, m);
    }

    .c-switcher__icon {
      left: auto;
      right: map-get($sizes, 5xs);
    }

    .c-switcher__icon--active {
      right: map-get($sizes, 5xs);
    }
  }
}

.c-switcher--label-small {
  .c-switcher__input + .c-switcher__label {
    font-size: map-get($font-sizes, 3xs);
    line-height: map-get($line-heights, 2xs);
    letter-spacing: map-get($letter-spacings, 2xs);

    &::before {
      top: map-get($sizes, 5xs);
    }
  
    &::after {
      top: map-get($sizes, 5xs);
    }
  }

  &.c-switcher--big {
    .c-switcher__input + .c-switcher__label {
      &::before {
        top: -1 * map-get($sizes, 3xs);
      }
    
      &::after {
        top: -1 * map-get($sizes, 3xs);
      }

      .c-switcher__icon {
        top: -1 * map-get($sizes, 3xs);
      }
    }
  }
}
