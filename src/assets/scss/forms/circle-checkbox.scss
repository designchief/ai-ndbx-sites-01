.c-checkbox-configurator {
  display: inline-flex;
  width: 100%;
  padding-top: map-get($sizes, 2xs);
  justify-content: center;
  color: map-get($color-primary-action, primary-action-bright);
}

.c-checkbox-configurator__input {
  opacity: 0;
  position: absolute;
}

.c-checkbox-configurator__input + .c-checkbox-configurator__label {
  z-index: 1;
  min-width: map-get($sizes, 3xl);
  position: relative;
  display: inline-flex;
  flex-direction: column;

  @include media-breakpoint-down("small") {
    min-width: map-get($sizes, xl);
  }
}

.c-checkbox-configurator__icon {
  position: relative;
  line-height: map-get($line-heights, m);
  letter-spacing: map-get($letter-spacings, xs);

  @include media-breakpoint-down("small") {
    line-height: map-get($line-heights, xs);
  }
}

.c-checkbox-configurator__icon--checked {
  position: absolute;
  top: (map-get($sizes, 2xs) + map-get($borders, m)) * -1;
  right: calc(50% - #{map-get($sizes, 4m)});

  @include media-breakpoint-down("small") {
    right: calc(50% - #{map-get($sizes, 3m)});
  }
}

.c-checkbox-configurator__input:not(:checked) + .c-checkbox-configurator__label .c-checkbox-configurator__icon--checked {
  opacity: 0;
}

.c-checkbox-configurator__input:checked + .c-checkbox-configurator__label .c-checkbox-configurator__icon--checked {
  background-color: map-get($color-direct, direct-green);
  border: map-get($sizes, 4xs) solid map-get($color-basic, primary-white);
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  height: map-get($sizes, 2m);
  width: map-get($sizes, 2m);
  font-size: map-get($font-sizes, s);

  opacity: 1;
  transition: opacity .3s;

  &::before {
    color: map-get($color-basic, primary-white);
  }
}

.c-checkbox-configurator__input:checked + .c-checkbox-configurator__label {
  .c-checkbox-configurator__icon {
    color: map-get($color-basic, primary-white);
    background-color: map-get($color-primary-action, primary-action-bright);
    border: map-get($sizes, 4xs) solid map-get($color-primary-action, primary-action-bright);

    &::before {
      color: map-get($color-basic, primary-white);
    }

    &:hover {
      background-color: map-get($color-primary-action, primary-action-darker);
      border-color: map-get($color-primary-action, primary-action-darker);

      &::before {
        color: map-get($color-basic, primary-white);
      }
    }
  }
}

//States of circle checkbox
.c-checkbox-configurator__input + .c-checkbox-configurator__label {
  .c-checkbox-configurator__icon {
    &:hover {
      background-color: map-get($color-primary-action, primary-action-darker);
      border-color: map-get($color-primary-action, primary-action-darker);
      color: map-get($color-basic, primary-white);

      &::before {
        color: map-get($color-basic, primary-white);
      }
    }

    &:active {
      background-color: map-get($color-basic, primary-brand);
      border-color: map-get($color-basic, primary-brand);
      color: map-get($color-basic, primary-white);

      &::before {
        color: map-get($color-basic, primary-white);
      }
    }
  }
}

.c-checkbox-configurator--negative .c-checkbox-configurator__input + .c-checkbox-configurator__label {
  .c-checkbox-configurator__icon {
    &:hover {
      background-color: map-get($color-grey-tones, grey-tone-6);
      border-color: map-get($color-grey-tones, grey-tone-6);
      color: map-get($color-primary-action, primary-action-dark);

      &::before {
        color: map-get($color-primary-action, primary-action-bright);
      }
    }

    &:active {
      background-color: map-get($color-grey-tones, grey-tone-5);
      border-color: map-get($color-grey-tones, grey-tone-5);
      color: map-get($color-primary-action, primary-action-dark);

      &::before {
        color: map-get($color-primary-action, primary-action-bright);
      }
    }
  }
}

.c-checkbox-configurator--negative {
  .c-checkbox-configurator__input:checked + .c-checkbox-configurator__label {
    .c-checkbox-configurator__icon {
      color: map-get($color-primary-action, primary-action-dark);
      background-color: map-get($color-basic, primary-white);
      border: map-get($sizes, 4xs) solid map-get($color-basic, primary-white);

      &::before {
        color: map-get($color-primary-action, primary-action-bright);
      }

      &:hover {
        background-color: map-get($color-grey-tones, grey-tone-6);
        border-color: map-get($color-grey-tones, grey-tone-6);

        &::before {
          color: map-get($color-primary-action, primary-action-bright);
        }
      }
    }
  }
}

.c-checkbox-configurator__icon {
  width: map-get($sizes, 3xl);
  height: map-get($sizes, 3xl);
  border: map-get($sizes, 4xs) solid map-get($color-primary-action, primary-action-bright);
  border-radius: 50%;
  display: flex;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  margin: map-get($sizes, 5xs) auto;
  font-size: map-get($font-sizes, s);
  color: map-get($color-primary-action, primary-action-dark);

  @include media-breakpoint-down("small") {
    width: map-get($sizes, xl);
    height: map-get($sizes, xl);
    font-size: map-get($font-sizes, xs);
  }

  &::before {
    display: flex;
    font-size: map-get($sizes, 4m);
    height: map-get($sizes, 4m);
    width: map-get($sizes, 4m);
    justify-content: center;
    align-items: center;
    color: map-get($color-primary-action, primary-action-bright);

    @include media-breakpoint-down("small") {
      font-size: map-get($sizes, 3m);
      height: map-get($sizes, 3m);
      width: map-get($sizes, 3m);
    }
  }
}

.c-checkbox-configurator--negative .c-checkbox-configurator__icon {
  color: map-get($color-basic, primary-white);
  border-color: map-get($color-basic, primary-white);

  &::before {
    color: map-get($color-basic, primary-white);
  }
}

.c-checkbox-configurator__description {
  margin-top: map-get($sizes, xs);
}

.c-checkbox-configurator__description,
.c-checkbox-configurator__hint {
  font-size: map-get($font-sizes, 3xs);
  font-weight: map-get($font-weight, regular);
  line-height: map-get($line-heights, 2xs);
  justify-content: center;
  display: flex;
  color: map-get($color-grey-tones, grey-tone-1);
  text-align: center;

  @include media-breakpoint-down("small") {
    font-size: map-get($font-sizes, 4xs);
    margin-top: map-get($sizes, 2xs);
    letter-spacing: map-get($letter-spacings, xs);
    line-height: map-get($line-heights, 3xs);
  }
}
.c-checkbox-configurator--negative {
  .c-checkbox-configurator__description,
  .c-checkbox-configurator__hint {
    color: map-get($color-basic, primary-white);
  }
}

// Disable state for default and negative
.c-checkbox-configurator__input:disabled + .c-checkbox-configurator__label {
    pointer-events: none;

    .c-checkbox-configurator__icon {
      opacity: 0.4;
    }

    .c-checkbox-configurator__description {
      color: map-get($color-grey-tones, grey-tone-5);
    }

    .c-checkbox-configurator__icon--checked {
      border: 0;
      background-color: map-get($color-primary-action, primary-action-bright);
    }
}

.c-checkbox-configurator--negative {
  .c-checkbox-configurator__input:disabled + .c-checkbox-configurator__label {   
      .c-checkbox-configurator__description {
        color: rgba(map-get($color-basic, primary-white), 0.4);
      }
  }
}

.c-checkbox-configurator--negative {
  .c-checkbox-configurator__input:checked:disabled + .c-checkbox-configurator__label {
    .c-checkbox-configurator__icon {
      opacity: 1;
      background-color: rgba(map-get($color-basic, primary-white), 0.4);
      border-color: transparent;
    }

    .c-checkbox-configurator__icon::before {
      color: rgba(map-get($color-grey-tones, grey-tone-1), 0.3);
    }
  }
  .c-checkbox-configurator__input:disabled + .c-checkbox-configurator__label {     
      .c-checkbox-configurator__icon--checked {
        background-color: map-get($color-grey-tones, grey-tone-3);
      }

      .c-checkbox-configurator__icon--checked::before {
        color: map-get($color-grey-tones, grey-tone-4);
      } 
  }
}

.c-checkbox-configurator--bold-title {
  .c-checkbox-configurator__description {
    font-weight: map-get($font-weight, bold);
  }

  @include media-breakpoint-down("small") {
    .c-checkbox-configurator__description {
      font-weight: map-get($font-weight, regular);
    }

    .c-checkbox-configurator__hint {
      font-weight: map-get($font-weight, light);
      margin-top: map-get($sizes, 5xs);
    }
  }
}

.c-checkbox-configurator__input:focus + .c-checkbox-configurator__label:after {
  [data-whatinput="keyboard"] & {
    top: - map-get($sizes, 4xs);
    left: 50%;
    transform: translateX(-50%);
    content: "";
    position: absolute;
    z-index: -1;
    width: map-get($sizes, 3xl) + (2 * map-get($borders, m));
    height: map-get($sizes, 3xl) + (2 * map-get($borders, m));
    border: map-get($borders, m) solid map-get($color-basic, primary-white);
    border-radius: 50%;
    box-shadow: 0 0 0 map-get($borders, xl) map-get($color-functional, accessibility-focus-color);

    @include media-breakpoint-response("mobile") {
        width: map-get($sizes, xl) + (2 * map-get($borders, m));
        height: map-get($sizes, xl) + (2 * map-get($borders, m));
    }
  }
}

.c-checkbox-configurator__input:focus + .c-checkbox-configurator__label {
  .c-checkbox-configurator__icon--checked::after {
  [data-whatinput="keyboard"] & {
    top: - (map-get($sizes, 4xs) + map-get($sizes, 3xs));
    left: 50%;
    transform: translateX(-50%);
    content: "";
    position: absolute;
    z-index: -1;
    width: calc(100% + #{map-get($sizes, xs)});
    height: calc(100% + #{map-get($sizes, xs)});
    border: map-get($borders, xl) solid map-get($color-functional, accessibility-focus-color);
    border-radius: 50%;
    }
  }
}

.c-checkbox-configurator--negative {
  .c-checkbox-configurator__input:focus + .c-checkbox-configurator__label::after {
    [data-whatinput="keyboard"] & {
      border: map-get($borders, xl) solid map-get($color-basic, primary-white);  
    }
  }
}

